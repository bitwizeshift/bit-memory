#########################
# project configuration #
#########################

# Enable C++
language: cpp

dist: trusty
sudo: required
group: edge

###################
# branch settings #
###################
branches:
  except:
    - prototype/.*
    - gh-pages


################
# build matrix #
################
matrix:
  include:

    #############
    # Linux gcc #
    #############

    - os: linux
      compiler: gcc
      env: COMPILER=g++-6 CONFIGURATION=Release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']

    - os: linux
      compiler: gcc
      env: COMPILER=g++-7 CONFIGURATION=Release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']

    ###############
    # Linux clang #
    ###############

    - os: linux
      compiler: clang
      env: COMPILER=clang++-3.9 CONFIGURATION=Release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'clang-3.9']

    - os: linux
      compiler: clang
      env: COMPILER=clang++-4.0 CONFIGURATION=Release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']
          packages: ['g++-6', 'clang-4.0']

    # clang++-5.0 is commented out since travis is failing to acquire llvm-5.0 packages

    # - os: linux
    #   compiler: clang
    #   env: COMPILER=clang++-5.0 CONFIGURATION=Release
    #   addons:
    #     apt:
    #       sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
    #       packages: ['g++-6', 'clang-5.0']

    #############
    # OSX clang #
    #############

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: COMPILER=clang++ CONFIGURATION=Release

    - os: osx
      osx_image: xcode8
      compiler: clang
      env: COMPILER=clang++ CONFIGURATION=Release

    - os: osx
      osx_image: xcode8.1
      compiler: clang
      env: COMPILER=clang++ CONFIGURATION=Release

    - os: osx
      osx_image: xcode8.2
      compiler: clang
      env: COMPILER=clang++ CONFIGURATION=Release

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER=clang++ CONFIGURATION=Release

    - os: osx
      osx_image: xcode9
      compiler: clang
      env: COMPILER=clang++ CONFIGURATION=Release

######################
# Installation Steps #
######################
install:
  - cd ../

  # Get dependency 'catch'
  - mkdir -p catch/include
  - wget https://github.com/catchorg/Catch2/releases/download/v2.0.1/catch.hpp -P catch/include
  - export CATCH_DIR=$(pwd)/catch/include

  # Install cmake 3.9.4 for Linux
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget --no-check-certificate https://www.cmake.org/files/v3.9/cmake-3.9.4-Linux-x86_64.tar.gz
      tar -xzf cmake-3.9.4-Linux-x86_64.tar.gz
      export CMAKE=$TRAVIS_BUILD_DIR/../cmake-3.9.4-Linux-x86_64/bin/cmake
    fi

  # Install cmake 3.9.4 for MacOS
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget --no-check-certificate https://cmake.org/files/v3.9/cmake-3.9.4-Darwin-x86_64.tar.gz
      tar -xzf cmake-3.9.4-Darwin-x86_64.tar.gz && ls && ls cmake-3.9.4-Darwin-x86_64
      export CMAKE=$TRAVIS_BUILD_DIR/../cmake-3.9.4-Darwin-x86_64/CMake.app/Contents/bin/cmake
    fi

  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  - cd bit-memory/

##############
# Build Step #
##############
script:
  # show OS/compiler/cmake version (MacOS uses sw_vers)
  - uname -a
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sw_vers; fi
  - $CXX --version
  - $CMAKE --version

  # Build
  - mkdir build/ && cd build/
  - export CTEST_OUTPUT_ON_FAILURE=1
  - $CMAKE .. -DCMAKE_BUILD_TYPE=$CONFIGURATION -DCMAKE_INCLUDE_PATH=$CATCH_DIR -DBIT_MEMORY_COMPILE_HEADER_SELF_CONTAINMENT_TESTS=On -DBIT_MEMORY_COMPILE_UNIT_TESTS=On
  - $CMAKE --build . --config $CONFIGURATION

  # Run
  - $CMAKE --build . --target test --config $CONFIGURATION
